package io.openfuture.chain.smartcontract.deploy

import io.openfuture.chain.smartcontract.deploy.domain.ClassSource
import io.openfuture.chain.smartcontract.deploy.load.SourceClassLoader
import org.assertj.core.api.Assertions.assertThat
import org.bouncycastle.pqc.math.linearalgebra.ByteUtils
import org.junit.Test
import java.nio.file.Path
import java.nio.file.Paths

class ClassLoadingTests {
    
    @Test
    fun loadBytesWhenValidContract() {
        val path = "/classes/CalculatorContract.class"
        val bytes = getResource(path).toFile().readBytes()
        val loader = SourceClassLoader()

        val loaded = loader.loadBytes(ClassSource(bytes))

        assertThat(loaded.clazz.newInstance().javaClass.simpleName).isEqualTo("CalculatorContract")
        assertThat(loaded.byteCode).isEqualTo(bytes)
    }

    @Test
    fun loadClassFromFile() {
        val path = "/classes/CalculatorContract.class"
        val loader = SourceClassLoader(listOf(getResource(path)))

        val clazz = loader.loadClass("io.openfuture.chain.smartcontract.templates.CalculatorContract")
        val contract = clazz.newInstance()

        assertThat(contract).isNotNull
        assertThat(clazz.getDeclaredMethod("result").invoke(contract)).isEqualTo(0L)
        clazz.getDeclaredMethod("add", Long::class.java).invoke(contract, 10L)
        assertThat(clazz.getDeclaredMethod("result").invoke(contract)).isEqualTo(10L)
    }


    @Test
    fun loadBytesWhenJavaClass() {
        val javaBytes = """
           cafebabe0000003400300a000500160a0005001708001807001907001a0100063c696e69743e010015284c6a6176612f6c616e672f53
           7472696e673b2956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c65
           010004746869730100164c696f2f746573742f4a617661436f6e74726163743b01000c6f776e6572416464726573730100124c6a6176
           612f6c616e672f537472696e673b01002452756e74696d65496e76697369626c65506172616d65746572416e6e6f746174696f6e7301
           00234c6f72672f6a6574627261696e732f616e6e6f746174696f6e732f4e6f744e756c6c3b01000328295601000568656c6c6f010014
           28294c6a6176612f6c616e672f537472696e673b01000a536f7572636546696c650100114a617661436f6e74726163742e6a6176610c
           000600070c0006001101000d48656c6c6f2c20776f726c6421010014696f2f746573742f4a617661436f6e747261637401003a696f2f
           6f70656e6675747572652f636861696e2f736d617274636f6e74726163742f636f72652f6d6f64656c2f536d617274436f6e74726163
           740100112424247265706f72744e756c6c24242430010004284929560c001b001c0a0004001d01003e417267756d656e7420666f7220
           404e6f744e756c6c20706172616d657465722027257327206f662025732e2573206d757374206e6f74206265206e756c6c08001f0100
           106a6176612f6c616e672f4f626a65637407002108000d0800190800060100106a6176612f6c616e672f537472696e67070026010006
           666f726d6174010039284c6a6176612f6c616e672f537472696e673b5b4c6a6176612f6c616e672f4f626a6563743b294c6a6176612f
           6c616e672f537472696e673b0c002800290a0027002a0100226a6176612f6c616e672f496c6c6567616c417267756d656e7445786365
           7074696f6e07002c0a002d001601000d537461636b4d61705461626c6500210004000500000000000400010006000700020008000000
           4f000200020000000e2bc7000703b8001e2a2bb70001b100000003000a0000001600020000000e000b000c00000000000e000d000e00
           0100090000000a000200080009000d000a002f00000003000108000f0000000701000100100000000100060011000100080000003300
           010001000000052ab70002b100000002000a0000000c000100000005000b000c000000090000000a00020000000d0004000e00010012
           0013000100080000002d00010001000000031203b000000002000a0000000c000100000003000b000c00000009000000060001000000
           11100a001b001c000100080000002d0005000100000021122006bd0022590312235359041224535905122553b8002bbb002d5a5fb700
           2ebf0000000000010014000000020015
        """

        val loader = SourceClassLoader()
        val clazz = loader.loadBytes("io.test.JavaContract", ByteUtils.fromHexString(javaBytes)).clazz
        val result = clazz.getDeclaredMethod("hello").invoke(clazz.newInstance())

        assertThat(result).isEqualTo("Hello, world!")
    }

    @Test
    fun loadBytesWhenKotlinClass() {
        val kotlinBytes = """
           cafebabe000000340026010016696f2f746573742f4b6f746c696e436f6e747261637407000101003a696f2f6f70656e667574757265
           2f636861696e2f736d617274636f6e74726163742f636f72652f6d6f64656c2f536d617274436f6e747261637407000301000568656c
           6c6f01001428294c6a6176612f6c616e672f537472696e673b0100234c6f72672f6a6574627261696e732f616e6e6f746174696f6e73
           2f4e6f744e756c6c3b01000d48656c6c6f2c20776f726c6421080008010004746869730100184c696f2f746573742f4b6f746c696e43
           6f6e74726163743b0100063c696e69743e010003282956010044284c6a6176612f6c616e672f537472696e673b494c6b6f746c696e2f
           6a766d2f696e7465726e616c2f44656661756c74436f6e7374727563746f724d61726b65723b29560c000c000e0a0004000f0100114c
           6b6f746c696e2f4d657461646174613b0100026d760300000001030000000d0100026276030000000003000000030100016b01000264
           31010031c080120a0218020a0218020a0208020a02100e0ac08018c080320230014205c2a2060210024a0610031a023004c2a8060501
           0002643201003c4c696f2f6f70656e6675747572652f636861696e2f736d617274636f6e74726163742f636f72652f6d6f64656c2f53
           6d617274436f6e74726163743b01000001000f6f70656e2d636861696e5f6d61696e01000e48656c6c6f4b6f746c696e2e6b74010004
           436f64650100124c6f63616c5661726961626c655461626c6501000f4c696e654e756d6265725461626c6501001b52756e74696d6549
           6e76697369626c65416e6e6f746174696f6e7301000a536f7572636546696c6501001952756e74696d6556697369626c65416e6e6f74
           6174696f6e73003100020004000000000002001100050006000200200000002d00010001000000031209b00000000200210000000c00
           0100000003000a000b00000022000000060001000000070023000000060001000700000001000c000d00010020000000360004000100
           0000082a010401b70010b10000000200210000000c000100000008000a000b000000220000000a000200000005000400050002002400
           000002001f00250000004600010011000500125b000349001349001349001400155b0003490013490016490017001849001300195b00
           0173001a001b5b000673000b73001c73000d73000573001d73001e
        """

        val loader = SourceClassLoader()
        val clazz = loader.loadBytes("io.test.KotlinContract", ByteUtils.fromHexString(kotlinBytes)).clazz
        val result = clazz.getDeclaredMethod("hello").invoke(clazz.newInstance())

        assertThat(result).isEqualTo("Hello, world!")
    }

    private fun getResource(path: String): Path = Paths.get(javaClass.getResource(path).toURI())

}